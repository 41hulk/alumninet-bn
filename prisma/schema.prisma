datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String        @id @default(cuid())
  email       String        @unique
  password    String
  username    String?
  avatar      String?
  profession  String?
  bio         String?
  isAdmin     Boolean       @default(false)
  isActive    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  deleted_at  DateTime?
  Reservation Reservation[]
  Event       Event[]
  Donation    Donation[]
}

model Event {
  id Int @id @default(autoincrement())

  userId      String
  avatar      String?
  title       String
  description String
  date        DateTime
  location    String

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  delete_at DateTime?

  reservations Reservation[]
}

model Reservation {
  id      Int    @id @default(autoincrement())
  userId  String
  eventId Int

  event Event @relation(fields: [eventId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Campaign {
  id            String     @id @default(cuid())
  title         String
  description   String
  startDate     DateTime
  endDate       DateTime
  image         String
  isPublished   Boolean    @default(true)
  targetAmount  Float
  currentAmount Float      @default(0)
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt
  deleted_at    DateTime?
  donations     Donation[]
}

model Donation {
  id Int @id @default(autoincrement())

  userId     String
  campaignId String

  amount    Float
  createdAt DateTime @default(now())

  user     User     @relation(fields: [userId], references: [id])
  campaign Campaign @relation(fields: [campaignId], references: [id])
}
